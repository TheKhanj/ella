{
  "$schema": "https://json-schema.org/draft-07/schema",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "$schema": {
      "type": "string"
    },
    "entry": {
      "type": "string",
      "description": "The initial service to launch at system startup."
    },
    "services": {
      "type": "array",
      "items": {
        "oneOf": [
          {
            "type": "string",
            "description": "Glob pattern matching JSON config files with the same schema; services defined in these files are merged into this fileâ€™s services configuration."
          },
          {
            "$ref": "#/definitions/Service"
          }
        ]
      }
    }
  },
  "required": [
    "services"
  ],
  "definitions": {
    "Service": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the service."
        },
        "process": {
          "$ref": "#/definitions/Proc"
        },
        "restart": {
          "$ref": "#/definitions/RestartStrategy"
        },
        "relations": {
          "type": "object",
          "propertyNames": {
            "$ref": "#/definitions/RelationName"
          },
          "additionalProperties": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Service name."
                },
                {
                  "$ref": "#/definitions/ServiceListDirGlob"
                }
              ]
            }
          }
        }
      },
      "required": [
        "name",
        "process",
        "restart",
        "relations"
      ]
    },
    "ServiceListDirGlob": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "glob"
          ]
        },
        "glob": {
          "type": "string",
          "description": "A glob pattern that identifies directories containing empty files, where each file is named after its corresponding relation service."
        }
      }
    },
    "RelationName": {
      "type": "string",
      "enum": [
        "requires",
        "wants",
        "requisite",
        "bindsTo",
        "partOf",
        "conflicts",
        "before",
        "after",
        "reloadCascade"
      ]
    },
    "Proc": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "exec": {
          "$ref": "#/definitions/ProcExec"
        },
        "reload": {
          "$ref": "#/definitions/ReloadProcAction",
          "description": "Action to do on the process when receiving reload signal.",
          "default": "SIGHUP"
        },
        "stop": {
          "$ref": "#/definitions/StopProcAction",
          "description": "Action to do on the process when receiving stop signal.",
          "default": "SIGINT"
        },
        "cwd": {
          "$ref": "#/definitions/Cwd"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "group": {
          "$ref": "#/definitions/Group"
        },
        "stdout": {
          "$ref": "#/definitions/Stdout"
        },
        "stderr": {
          "$ref": "#/definitions/Stderr"
        },
        "stdin": {
          "$ref": "#/definitions/Stdin"
        },
        "environments": {
          "$ref": "#/definitions/Environments"
        },
        "watchdog": {
          "$ref": "#/definitions/Watchdog"
        }
      },
      "required": [
        "exec",
        "reload",
        "stop",
        "cwd",
        "user",
        "group",
        "stdout",
        "stderr",
        "stdin",
        "environments",
        "watchdog"
      ]
    },
    "ProcExec": {
      "type": "string",
      "description": "Binary command with absolute/relative path and optional arguments."
    },
    "StopProcAction": {
      "oneOf": [
        {
          "$ref": "#/definitions/ProcActionSignalCode"
        },
        {
          "$ref": "#/definitions/ProcActionExec"
        },
        {
          "$ref": "#/definitions/StopProcActionSignal"
        }
      ]
    },
    "ReloadProcAction": {
      "oneOf": [
        {
          "$ref": "#/definitions/ProcActionSignalCode"
        },
        {
          "$ref": "#/definitions/ProcActionExec"
        }
      ]
    },
    "ProcActionSignalCode": {
      "type": "string",
      "enum": [
        "SIGHUP",
        "SIGINT",
        "SIGQUIT",
        "SIGILL",
        "SIGABRT",
        "SIGFPE",
        "SIGKILL",
        "SIGSEGV",
        "SIGPIPE",
        "SIGALRM",
        "SIGTERM",
        "SIGUSR1",
        "SIGUSR2",
        "SIGCHLD",
        "SIGCONT",
        "SIGSTOP",
        "SIGTSTP",
        "SIGTTIN",
        "SIGTTOU"
      ]
    },
    "StopProcActionSignal": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "signal"
          ]
        },
        "code": {
          "$ref": "#/definitions/ProcActionSignalCode"
        },
        "timeout": {
          "$ref": "#/definitions/Duration"
        }
      },
      "required": [
        "type",
        "code",
        "timeout"
      ]
    },
    "ProcActionExec": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "exec"
          ]
        },
        "exec": {
          "$ref": "#/definitions/ProcExec"
        },
        "timeout": {
          "$ref": "#/definitions/Duration"
        }
      },
      "required": [
        "type",
        "code",
        "timeout"
      ]
    },
    "Watchdog": {
      "description": "Strategy to use for monitoring status of the service.",
      "$ref": "#/definitions/SimpleWatchdog"
    },
    "SimpleWatchdog": {
      "type": "object",
      "description": "Simple monitor starts the process immediately; process becomes inactive on normal exit, fails on non-zero exit.",
      "additionalProperties": false,
      "properties": {
        "strategy": {
          "type": "string",
          "enum": [
            "simple"
          ]
        }
      },
      "required": [
        "strategy"
      ]
    },
    "RestartStrategy": {
      "$ref": "#/definitions/AlwaysRestart"
    },
    "AlwaysRestart": {
      "type": "object",
      "description": "Always restart strategy.",
      "additionalProperties": false,
      "properties": {
        "strategy": {
          "type": "string",
          "enum": [
            "always"
          ]
        },
        "backoff": {
          "$ref": "#/definitions/Duration",
          "description": "The amount of time to wait before automatically restarting the process after it fails."
        }
      },
      "required": [
        "strategy",
        "backoff"
      ]
    },
    "Environments": {
      "oneOf": [
        {
          "$ref": "#/definitions/Inherit",
          "description": "Inherit all environment variables from the main process."
        },
        {
          "type": "object",
          "additionalProperties": {
            "oneOf": [
              {
                "$ref": "#/definitions/Inherit",
                "description": "Use the value from the same key in the environment variables of the main process."
              },
              {
                "type": "string",
                "pattern": "^(?!\\!).*$",
                "description": "Literal value to pass in."
              },
              {
                "$ref": "#/definitions/LiteralEnvValue"
              }
            ]
          },
          "propertyNames": {
            "type": "string",
            "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
          }
        }
      ]
    },
    "LiteralEnvValue": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "literal"
          ]
        },
        "value": {
          "type": "string",
          "description": "Literal value to pass in."
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "Cwd": {
      "type": "string",
      "description": "Working directory of the process."
    },
    "User": {
      "oneOf": [
        {
          "type": "string",
          "description": "User to run the process as.",
          "pattern": "^[a-z_][a-z0-9_-]*$",
          "examples": [
            "root"
          ]
        },
        {
          "$ref": "#/definitions/Inherit",
          "description": "Use the same user as the main process."
        },
        {
          "type": "integer",
          "minimum": 0,
          "description": "UID to run the process with."
        }
      ]
    },
    "Group": {
      "oneOf": [
        {
          "type": "string",
          "description": "Group to run the process as.",
          "pattern": "^[a-z_][a-z0-9_-]*$",
          "examples": [
            "root"
          ]
        },
        {
          "$ref": "#/definitions/Inherit",
          "description": "Use the same group as the main process."
        },
        {
          "type": "integer",
          "minimum": 0,
          "description": "GID to run the process with."
        }
      ]
    },
    "Stdout": {
      "type": "boolean",
      "description": "Whether to show stdout or not."
    },
    "Stderr": {
      "type": "boolean",
      "description": "Whether to show stdout or not."
    },
    "Stdin": {
      "examples": [
        null,
        "/absolute/path/to/a/file",
        "./relative/path/to/a/file"
      ],
      "oneOf": [
        {
          "type": "null",
          "description": "No stdin."
        },
        {
          "type": "string",
          "description": "File to use for stdin."
        }
      ]
    },
    "Duration": {
      "type": "string",
      "pattern": "^([0-9]+(\\.[0-9]+)?(ns|us|Âµs|ms|s|m|h))+$",
      "examples": [
        "5s"
      ]
    },
    "Inherit": {
      "type": "string",
      "enum": [
        "!inherit"
      ]
    }
  }
}
